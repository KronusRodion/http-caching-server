swagger: "2.0"
info:
  title: Auth Go API
  description: API for authentication and token management
  version: 1.0.0
host: localhost:80
basePath: /
schemes:
  - http

paths:
  /getTokens:
    get:
      summary: Get new token pair
      description: Generates new access and refresh tokens for a user
      consumes:
        - application/x-www-form-urlencoded
      responses:
        200:
          description: Successful token generation
          schema:
            $ref: '#/definitions/TokenResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /updateTokens:
    post:
      summary: Refresh access token
      description: Generates new tokens using a valid refresh token
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: refresh_token
          in: formData
          type: string
          required: true
          description: Valid refresh token
        - name: user_GUID
          in: formData
          type: string
          required: true
          description: Valid user_GUID
      responses:
        200:
          description: Tokens refreshed successfully
          schema:
            $ref: '#/definitions/TokenResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Unauthorized (invalid token)
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /GetGUID:
    get:
      summary: Get user GUID
      description: Retrieves user GUID from valid access token
      security:
        - BearerAuth: []
      parameters:
        - name: access_token
          in: query
          type: string
          required: true
          description: Valid access token
      responses:
        200:
          description: Successful GUID retrieval
          schema:
            $ref: '#/definitions/GUIDResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Unauthorized (invalid token)
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /DeAutharization:
    post:
      summary: Deauthorize user
      description: Invalidates user's tokens and clears session
      security:
        - BearerAuth: []
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: access_token
          in: formData
          type: string
          required: true
          description: Valid access token
      responses:
        200:
          description: Successfully deauthorized
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Unauthorized (invalid token)
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'

securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: Use 'Bearer {access_token}'

definitions:
  TokenResponse:
    type: object
    properties:
      access_token:
        type: string
        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      refresh_token:
        type: string
        example: "fb4e7dd9e7c6a8b9c0d2e8f4b5c9d0a3e"

  GUIDResponse:
    type: object
    properties:
      user_GUID:
        type: string
        example: "a1b2c3d4-e5f6-7890"

  ErrorResponse:
    type: object
    properties:
      error:
        type: string
        example: "invalid credentials"